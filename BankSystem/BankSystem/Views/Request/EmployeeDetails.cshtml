@using BLL.Models.Enums
@model BankSystem.Models.EmployeeRequestDetailsVM

@{
    ViewBag.Title = "Заявка";
}

<h2>Заявка</h2>
<div>
    @if (User.IsInRole("Operator"))
    {
        <div>
            @Html.ActionLink("Очередь заявок", "RequestsQue")
        </div>
    }
    @if (User.IsInRole("SecurityWorker"))
    {
        <div>
            @Html.ActionLink("Очередь заявок", "ApproveQue", "SecurityWorker")
        </div>
    }
    <div>
        @Html.ActionLink("Пользователь", "ClientDetails", "Employee", new {clientId = Model.RequestModel.ClientId}, null)
    </div>
    @if (Model.RequestModel.State == RequestState.SecurityApproved)
    {
        <div>
            Заявка одобрена сотрудником безопасности
        </div>
    }
    @if (Model.RequestModel.State == RequestState.SecurityRejected)
    {
    <div>
        Заявка отклонена сотрудником безопасности
    </div>
    }
    @if (Model.DepositModel != null)
    {
        <div>
            @Html.ActionLink("Открыт вклад", "EmployeeDetails", "Deposit", new {depositId = Model.DepositModel.Id}, null)
        </div>
    }
    @if (Model.RequestModel.Type == RequestType.Credit)
    {
        <div>Заявка на кредит: @Model.RequestModel.TypeName</div>
    }
    else if (Model.RequestModel.Type == RequestType.Deposit)
    {
        <div>Заявка на депозит: @Model.RequestModel.TypeName</div>
    }
    <div>
        Дата создания: @Model.RequestModel.FormattedDate
    </div>
    <div>
        Статус заявки: @Model.RequestModel.StatusString
    </div>
    <div>
        Заявленная сумма: @Model.RequestModel.Amount.ToString("N")
    </div>
    @if (Model.IsAssignedToCurrent)
    {
        if (Model.RequestModel.Type == RequestType.Credit)
        {
            <div>
                @if ((Model.RequestModel.State == RequestState.SecurityApproved && User.IsInRole("Operator")) || (Model.RequestModel.State == RequestState.SecurityCheck && User.IsInRole("SecurityWorker")))
                {
                    @Html.ActionLink("Подтвердить", "ApproveRequest", new {requestId = Model.RequestModel.Id}, new {@class = "btn btn-sm btn-default"})
                }
                @if (((Model.RequestModel.State == RequestState.Pending || Model.RequestModel.State == RequestState.SecurityApproved || Model.RequestModel.State == RequestState.SecurityRejected) && User.IsInRole("Operator")) || (Model.RequestModel.State == RequestState.SecurityCheck && User.IsInRole("SecurityWorker")))
                {
                    @Html.ActionLink("Отклонить", "RejectRequest", new {requestId = Model.RequestModel.Id}, new {@class = "btn btn-sm btn-default"})
                }
                @if (Model.RequestModel.State == RequestState.Pending)
                {
                    @Html.ActionLink("На проверку", "ToSecurityWorker", new {requestId = Model.RequestModel.Id}, new {@class = "btn btn-sm btn-default"})
                }
            </div>
        }
        if (Model.RequestModel.Type == RequestType.Deposit && Model.RequestModel.State == RequestState.Pending)
        {
            <div>
                @Html.ActionLink("Подтвердить", "ApproveRequest", new {requestId = Model.RequestModel.Id}, new {@class = "btn btn-sm btn-default"})
                @Html.ActionLink("Отклонить", "RejectRequest", new {requestId = Model.RequestModel.Id}, new {@class = "btn btn-sm btn-default"})
            </div>
        }
    }
    
    @if (Model.RequestModel.State == RequestState.Approved && Model.RequestModel.Type == RequestType.Deposit && Model.DepositModel == null)
    {
        <div>
            @Html.ActionLink("Открыть вклад", "OpenDeposit", "Deposit", new {requestId = Model.RequestModel.Id}, new {@class = "btn btn-sm btn-default"})
        </div>
    }
    @if (Model.RequestModel.State == RequestState.Approved && Model.RequestModel.Type == RequestType.Credit && Model.CreditModel == null)
    {
        <div>
            @Html.ActionLink("Открыть кредит", "OpenCredit", "Credit", new {requestId = Model.RequestModel.Id}, new {@class = "btn btn-sm btn-default"})
        </div>
    }
    @if (Model.RequestModel.Comments != null && Model.RequestModel.Comments.Any())
    {
        <hr />
        <p>Комментарии</p>
        foreach (var comment in Model.RequestModel.Comments)
        {
            <div class="panel panel-default">
                <div class="panel-heading">@comment.AuthorName <b>@comment.FormattedDate</b></div>
                <div class="panel-body">
                    @comment.Text
                </div>
            </div>
        }
    }
    <hr />
    @using (Html.BeginForm("LeaveComment", "Comment", new { requestId = Model.RequestModel.Id }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <p>Оставить сообщение</p>
        <input type="checkbox" id="isInternal" value="True" name="IsInternal"/><label for="isInternal"> Не показывать пользователю</label>
        <textarea required name="Text" class="form-control"></textarea>
        <br />
        <button class="btn btn-success">Отправить</button>
    }
</div>