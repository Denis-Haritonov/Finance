<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Ninject.Extensions.Logging.NLog4</name>
    </assembly>
    <members>
        <member name="T:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger">
            <summary>
            A logger that integrates with nlog, passing all messages to a <see cref="T:NLog.Logger"/>.
            </summary>
        </member>
        <member name="F:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.nlogLogger">
            <summary>
            NLog logger.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger"/> class.
            </summary>
            <param name="type">The type to create a logger for.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger"/> class.
            </summary>
            <param name="name">A custom name to use for the logger.  If null, the type's FullName will be used.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Debug(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Debug severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.DebugException(System.String,System.Exception)">
            <summary>
            Logs the specified exception with Debug severity.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception to log.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Info(System.String)">
            <summary>
            Logs the specified message with Info severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Debug(System.String)">
            <summary>
            Logs the specified message with Debug severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Debug(System.String,System.Object[])">
            <summary>
            Logs the specified message with Debug severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Error(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Error severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.ErrorException(System.String,System.Exception)">
            <summary>
            Logs the specified exception with Error severity.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception to log.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Fatal(System.String)">
            <summary>
            Logs the specified message with Fatal severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.WarnException(System.String,System.Exception)">
            <summary>
            Logs the specified message with Warn severity.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception to log.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Error(System.String)">
            <summary>
            Logs the specified message with Error severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Error(System.String,System.Object[])">
            <summary>
            Logs the specified message with Error severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Fatal(System.String,System.Object[])">
            <summary>
            Logs the specified message with Fatal severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Fatal(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Fatal severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.FatalException(System.String,System.Exception)">
            <summary>
            Logs the specified exception with Fatal severity.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception to log.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Info(System.String,System.Object[])">
            <summary>
            Logs the specified message with Info severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Info(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Info severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.InfoException(System.String,System.Exception)">
            <summary>
            Logs the specified exception with Info severity.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception to log.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Trace(System.String)">
            <summary>
            Logs the specified message with Trace severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Trace(System.String,System.Object[])">
            <summary>
            Logs the specified message with Trace severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Trace(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Trace severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.TraceException(System.String,System.Exception)">
            <summary>
            Logs the specified exception with Trace severity.
            </summary>
            <param name="message">The message.</param>
            <param name="exception">The exception to log.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Warn(System.String)">
            <summary>
            Logs the specified message with Warn severity.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Warn(System.String,System.Object[])">
            <summary>
            Logs the specified message with Warn severity.
            </summary>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Warn(System.Exception,System.String,System.Object[])">
            <summary>
            Logs the specified exception with Warn severity.
            </summary>
            <param name="exception">The exception to log.</param>
            <param name="format">The message or format template.</param>
            <param name="args">Any arguments required for the format template.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Log(NLog.LogLevel,System.String,System.Object[])">
            <summary>
            Logs with the specified level while preserving the call site.
            </summary>
            <param name="level">The log level.</param>
            <param name="format">The message format.</param>
            <param name="args">The argsuments.</param>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Log(NLog.LogLevel,System.Exception,System.String,System.Object[])">
            <summary>
            Logs with the specified level while preserving the call site.
            </summary>
            <param name="level">The log level.</param>
            <param name="exception">The exception.</param>
            <param name="format">The message format.</param>
            <param name="args">The argsuments.</param>
        </member>
        <member name="P:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.Name">
            <summary>
            Gets the name of the logger.
            </summary>
            <value>The name of the logger.</value>
        </member>
        <member name="P:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.IsDebugEnabled">
            <summary>
            Gets a value indicating whether messages with Debug severity should be logged.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.IsInfoEnabled">
            <summary>
            Gets a value indicating whether messages with Info severity should be logged.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.IsTraceEnabled">
            <summary>
            Gets a value indicating whether messages with Trace severity should be logged.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.IsWarnEnabled">
            <summary>
            Gets a value indicating whether messages with Warn severity should be logged.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.IsErrorEnabled">
            <summary>
            Gets a value indicating whether messages with Error severity should be logged.
            </summary>
        </member>
        <member name="P:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger.IsFatalEnabled">
            <summary>
            Gets a value indicating whether messages with Fatal severity should be logged.
            </summary>
        </member>
        <member name="T:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLoggerFactory">
            <summary>
            An implementation of a logger factory that creates <see cref="T:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLogger"/>s.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLoggerFactory.CreateLogger(System.Type)">
            <summary>
            Creates a logger for the specified type.
            </summary>
            <param name="type">The type to create the logger for.</param>
            <returns>The newly-created logger.</returns>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.Infrastructure.NLogLoggerFactory.CreateLogger(System.String)">
            <summary>
            Creates a logger with the specified name.
            </summary>
            <param name="name">The explicit name to create the logger for.  If null, the type's FullName will be used.</param>
            <returns>The newly-created logger.</returns>
        </member>
        <member name="T:Ninject.Extensions.Logging.NLog4.NLogModule">
            <summary>
            Extends the functionality of the kernel, providing integration between the Ninject
            logging infrastructure and nlog.
            </summary>
        </member>
        <member name="M:Ninject.Extensions.Logging.NLog4.NLogModule.Load">
            <summary>
            Loads the module into the kernel.
            </summary>
        </member>
    </members>
</doc>
